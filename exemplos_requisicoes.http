### API de Gerenciamento de Projetos e Tarefas
### Arquivo de exemplos para testar todas as funcionalidades
### Use este arquivo com extens√µes como REST Client (VS Code) ou Postman

@baseUrl = http://localhost:8000

### ========================================
### üìã INFORMA√á√ïES DA API
### ========================================

### Obter informa√ß√µes gerais da API
GET {{baseUrl}}

### ========================================
### üë• USU√ÅRIOS
### ========================================

### Listar todos os usu√°rios
GET {{baseUrl}}/users

### Buscar usu√°rio espec√≠fico (ID = 1)
GET {{baseUrl}}/users/1

### Criar novo usu√°rio
POST {{baseUrl}}/users
Content-Type: application/json

{
  "name": "Carlos Mendes",
  "email": "carlos@email.com"
}

### Atualizar usu√°rio existente (ID = 1)
PUT {{baseUrl}}/users/1
Content-Type: application/json

{
  "name": "Carlos Mendes Silva",
  "email": "carlos.silva@email.com"
}

### Deletar usu√°rio (ID = 4) - Cuidado: s√≥ funciona se n√£o tiver projetos/tarefas
# DELETE {{baseUrl}}/users/4

### ========================================
### üìÅ PROJETOS
### ========================================

### Listar todos os projetos
GET {{baseUrl}}/projects

### Buscar projeto espec√≠fico (ID = 1)
GET {{baseUrl}}/projects/1

### Criar novo projeto
POST {{baseUrl}}/projects
Content-Type: application/json

{
  "title": "Sistema de Vendas Online",
  "description": "Desenvolvimento de uma plataforma completa de e-commerce com carrinho de compras, pagamentos e gest√£o de estoque",
  "deadline": "2024-08-15",
  "created_by": 1,
  "status": "ativo"
}

### Atualizar projeto existente (ID = 1)
PUT {{baseUrl}}/projects/1
Content-Type: application/json

{
  "title": "Website da Empresa - Vers√£o 2.0",
  "description": "Atualiza√ß√£o completa do site institucional com novo design responsivo",
  "deadline": "2024-04-30",
  "status": "em_andamento"
}

### Marcar projeto como conclu√≠do
PUT {{baseUrl}}/projects/2
Content-Type: application/json

{
  "title": "App Mobile",
  "status": "concluido"
}

### Deletar projeto (ID = 3) - Cuidado: deleta todas as tarefas tamb√©m
# DELETE {{baseUrl}}/projects/3

### ========================================
### ‚úÖ TAREFAS
### ========================================

### Listar todas as tarefas
GET {{baseUrl}}/tasks

### Filtrar tarefas por projeto
GET {{baseUrl}}/tasks?project_id=1

### Filtrar tarefas por usu√°rio atribu√≠do
GET {{baseUrl}}/tasks?assigned_to=2

### Filtrar tarefas por status
GET {{baseUrl}}/tasks?status=pendente

### Filtrar tarefas por prioridade
GET {{baseUrl}}/tasks?priority=alta

### Filtros combinados
GET {{baseUrl}}/tasks?project_id=1&status=em_andamento&priority=alta

### Buscar tarefa espec√≠fica (ID = 1)
GET {{baseUrl}}/tasks/1

### Criar nova tarefa com prioridade alta
POST {{baseUrl}}/tasks
Content-Type: application/json

{
  "title": "Implementar sistema de login",
  "description": "Desenvolver autentica√ß√£o de usu√°rios com email e senha, incluindo recupera√ß√£o de senha",
  "project_id": 1,
  "assigned_to": 2,
  "created_by": 1,
  "priority": "alta",
  "status": "pendente",
  "deadline": "2024-03-20"
}

### Criar tarefa sem usu√°rio atribu√≠do
POST {{baseUrl}}/tasks
Content-Type: application/json

{
  "title": "Pesquisar tecnologias de pagamento",
  "description": "Analisar op√ß√µes de gateway de pagamento (PagSeguro, Mercado Pago, Stripe)",
  "project_id": 1,
  "created_by": 1,
  "priority": "media",
  "deadline": "2024-03-10"
}

### Atribuir tarefa a um usu√°rio
PUT {{baseUrl}}/tasks/1
Content-Type: application/json

{
  "title": "Criar layout inicial",
  "assigned_to": 3,
  "status": "em_andamento"
}

### Marcar tarefa como conclu√≠da
PUT {{baseUrl}}/tasks/2
Content-Type: application/json

{
  "title": "Configurar banco de dados",
  "status": "concluida"
}

### Alterar prioridade da tarefa
PUT {{baseUrl}}/tasks/3
Content-Type: application/json

{
  "title": "Desenvolver tela de login",
  "priority": "alta",
  "deadline": "2024-02-25"
}

### Remover usu√°rio atribu√≠do da tarefa
PUT {{baseUrl}}/tasks/1
Content-Type: application/json

{
  "title": "Criar layout inicial",
  "assigned_to": null,
  "status": "pendente"
}

### Deletar tarefa (ID = 5)
# DELETE {{baseUrl}}/tasks/5

### ========================================
### üß™ TESTES DE VALIDA√á√ÉO
### ========================================

### Tentar criar usu√°rio com email inv√°lido (deve dar erro)
POST {{baseUrl}}/users
Content-Type: application/json

{
  "name": "Teste",
  "email": "email-invalido"
}

### Tentar criar usu√°rio com email duplicado (deve dar erro)
POST {{baseUrl}}/users
Content-Type: application/json

{
  "name": "Outro Jo√£o",
  "email": "joao@email.com"
}

### Tentar criar projeto sem t√≠tulo (deve dar erro)
POST {{baseUrl}}/projects
Content-Type: application/json

{
  "description": "Projeto sem t√≠tulo",
  "created_by": 1
}

### Tentar criar tarefa com data inv√°lida (deve dar erro)
POST {{baseUrl}}/tasks
Content-Type: application/json

{
  "title": "Tarefa com data inv√°lida",
  "project_id": 1,
  "created_by": 1,
  "deadline": "data-invalida"
}

### Tentar criar tarefa com prioridade inv√°lida (deve dar erro)
POST {{baseUrl}}/tasks
Content-Type: application/json

{
  "title": "Tarefa com prioridade inv√°lida",
  "project_id": 1,
  "created_by": 1,
  "priority": "urgentissima"
}

### Tentar buscar usu√°rio inexistente (deve retornar 404)
GET {{baseUrl}}/users/999

### Tentar buscar projeto inexistente (deve retornar 404)
GET {{baseUrl}}/projects/999

### Tentar buscar tarefa inexistente (deve retornar 404)
GET {{baseUrl}}/tasks/999

### ========================================
### üìä CEN√ÅRIOS DE USO REAL
### ========================================

### Cen√°rio 1: Criar um projeto completo com tarefas

# 1. Criar o projeto
POST {{baseUrl}}/projects
Content-Type: application/json

{
  "title": "Loja Virtual de Roupas",
  "description": "E-commerce completo para venda de roupas femininas e masculinas",
  "deadline": "2024-06-30",
  "created_by": 1
}

# 2. Criar tarefas do projeto (use o ID do projeto criado acima)
POST {{baseUrl}}/tasks
Content-Type: application/json

{
  "title": "Criar wireframes das p√°ginas",
  "description": "Desenhar o layout de todas as p√°ginas principais",
  "project_id": 3,
  "assigned_to": 2,
  "created_by": 1,
  "priority": "alta",
  "deadline": "2024-03-15"
}

POST {{baseUrl}}/tasks
Content-Type: application/json

{
  "title": "Desenvolver cat√°logo de produtos",
  "description": "Implementar listagem e filtros de produtos",
  "project_id": 3,
  "assigned_to": 3,
  "created_by": 1,
  "priority": "alta",
  "deadline": "2024-04-15"
}

POST {{baseUrl}}/tasks
Content-Type: application/json

{
  "title": "Integrar sistema de pagamento",
  "description": "Conectar com gateway de pagamento",
  "project_id": 3,
  "created_by": 1,
  "priority": "media",
  "deadline": "2024-05-15"
}

### Cen√°rio 2: Acompanhar progresso do projeto

# Verificar status geral do projeto
GET {{baseUrl}}/projects/3

# Ver todas as tarefas do projeto
GET {{baseUrl}}/tasks?project_id=3

# Ver tarefas pendentes
GET {{baseUrl}}/tasks?project_id=3&status=pendente

# Ver tarefas de alta prioridade
GET {{baseUrl}}/tasks?project_id=3&priority=alta

### ========================================
### üí° DICAS DE USO
### ========================================

# 1. Sempre verifique os IDs antes de fazer opera√ß√µes
# 2. Use filtros para encontrar informa√ß√µes espec√≠ficas
# 3. Teste cen√°rios de erro para entender as valida√ß√µes
# 4. Monitore prazos usando os campos de deadline
# 5. Use as estat√≠sticas dos projetos para acompanhar progresso

### ========================================
### üîß COMANDOS √öTEIS
### ========================================

# Para iniciar o servidor:
# php -S localhost:8000

# Para ver o banco de dados:
# O arquivo fica em: database/projeto_api.db
# Use um visualizador SQLite como DB Browser

# Para resetar dados:
# Delete o arquivo database/projeto_api.db e reinicie o servidor